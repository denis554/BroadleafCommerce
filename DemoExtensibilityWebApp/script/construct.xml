<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="construct_ear" default="build-war-dev" basedir="../">
	<property name="project.name" value="demo" />
	<property name="script.dir" value="${basedir}/script" />
	<property file="${script.dir}/${user.name}.properties"/>
	<property name="catalina.dir" value="C:\dev\jakarta-tomcat-5.0.28" />
	<property name="app.name" value="${project.name}"/>
	<property name="project.dir" value="${basedir}" />
	<property name="approot" value="${project.dir}/app/Demo" />
	<property name="webroot" value="${approot}/WebRoot" />
	<property name="axis2ConnProps.dir" value="${conf.dir}/axis2ConnectionProps" />
	<property name="web.lib.dir" value="${webroot}/WEB-INF/lib" />
	<property name="project.lib.common" location="${project.dir}/lib/common" />
	<property name="project.lib.include" location="${project.dir}/lib/include" />
	<property name="project.lib.compile" location="${project.dir}/lib/compile" />
	<property name="build.src.dir" value="${project.dir}/src" />
	<property name="build.web.classes.dir" value="${webroot}/WEB-INF/classes" />
	<property name="build.web.src.dir" value="${webroot}/WEB-INF/src" />
	
	<property name="release.dir" value="${project.dir}/release" />
	<property name="release.ear.dir" value="${release.dir}/ear" />

	<target name="deploy-simple" depends="build-war-dev">
		<copy file="release/${project.name}.war" todir="${catalina.dir}/webapps/" overwrite="true" />
	</target>
	
	<target name="build-war-dev" depends="compile">
		<echo>--------------------Building the WAR Module-----------------------</echo>
		<mkdir dir="${project.dir}/release"/>
		
		<war destfile="${project.dir}/release/${destination}.war" webxml="${webroot}/WEB-INF/web.xml" filesetmanifest="merge">
			<fileset dir="${webroot}">
				<exclude name="**/*.tmpl" />
			</fileset>

			<lib dir="${project.lib.common}">
				<include name="*.jar" />
				<include name="*.zip" />
			</lib>
			<lib dir="${project.lib.include}">
				<include name="*.jar" />
				<include name="*.zip" />
			</lib>
		</war>
		<!-- <delete dir="${build.web.classes.dir}"/> -->
	</target>

	<target name="simple-copy" depends="build-props">
		<mkdir dir="${webroot}/script"/>
		<echo>Copying project files</echo>
		<copy todir="${catalina.dir}/webapps/${project.name}">
			<fileset dir="${webroot}">
				<exclude name="**/*.tmpl" />
			</fileset>
		</copy>
		<echo>Copying project classes</echo>
		<copy todir="${catalina.dir}/webapps/${project.name}/WEB-INF/classes">
			<fileset dir="${basedir}/bin">
				<exclude name="**/*.tmpl" />
			</fileset>
		</copy>
	</target>
	
	<target name="copy-web">
		<copy todir="${catalina.dir}/webapps/${project.name}">
			<fileset dir="${webroot}">
				<exclude name="**/*.tmpl" />
			</fileset>
		</copy>
	</target>

	<target name="build-props">
		<property name="destination" value="${project.name}" />
		<path id="ant.class.path">
			<fileset dir="${project.lib.common}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${project.lib.compile}">
				<include name="*.jar" />
			</fileset>
		</path>

		<path id="war.class.path">
			<fileset dir="${project.lib.common}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${project.lib.include}">
				<include name="*.jar" />
			</fileset>
		</path>
	</target>

	<target name="compile" depends="build-props">
		<mkdir dir="${build.web.classes.dir}" />
		<mkdir dir="${build.web.src.dir}" />

		<!--copy any non-compile items -->
		<copy todir="${build.web.classes.dir}">
			<fileset dir="${build.src.dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		
		<!--copy all compile src -->
		<copy todir="${build.web.src.dir}">
			<fileset dir="${build.src.dir}">
			</fileset>
		</copy>
		
		<!--compile all src -->
		<javac destdir="${build.web.classes.dir}" deprecation="false" debug="on" failonerror="true" classpathref="ant.class.path" fork="true" memoryInitialSize="80M" memoryMaximumSize="500M">
				<src path="${build.web.src.dir}" />
		</javac>

		<!--del all compile src dir -->
		<delete dir="${build.web.src.dir}" />
		
	</target>

	<target name="clean">
		<delete dir="${release.dir}" />
		<delete dir="${build.web.classes.dir}" />
	</target>
	
</project>
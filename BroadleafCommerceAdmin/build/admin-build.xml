<?xml version="1.0" encoding="UTF-8"?>
<project name="${app.name}" basedir=".." default="usage">

	<property name="war.dir" value="${basedir}/war" />
	<property name="stage.dir" value="${basedir}/build/stage" />
	<property name="src.java.dir" value="${basedir}/src-java" />
	<property name="src.flex.dir" value="${basedir}/src-flex"/>
	<property name="test.src.dir" value="${basedir}/test" />
	<property name="compile.lib.swc.dir" value="${basedir}/lib/compile/swc"/>
	<property name="compile.lib.dir" value="${lib.dir}/compile/bin" />
	<property name="include.lib.dir" value="${basedir}/lib/include/bin" />
	<property name="war.lib.dir" value="${lib.dir}/common/bin" />
	<property file="${basedir}/build/build.properties" />

	<fail message="Build Failed. Please make sure you have updated Flex SDK Home, appserver.home, mysql.db.user and mysql.db.pw in build.properties">
		<condition>
			<or>
				<equals arg1="@@NOT_SET@@" arg2="${flex.sdk.dir}" />
				<equals arg1="@@NOT_SET@@" arg2="${appserver.home}" />
				<equals arg1="@@NOT_SET@@" arg2="${mysql.db.user}" />
				<equals arg1="@@NOT_SET@@" arg2="${mysql.db.pw}" />
			</or>
   		</condition>
	</fail>
	
	
	<taskdef resource="flexTasks.tasks" classpath="${flex.sdk.dir}/ant/lib/flexTasks.jar"/>
	<property name="FLEX_HOME" value="${flex.sdk.dir}"/>
	<property name="ADT.JAR" value="${flex.sdk.dir}/lib/adt.jar"/>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${lib.dir}/test/bin/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>
	
	

	<fileset id="compile.lib" dir="${compile.lib.dir}" description="compile-time dependencies">
		<include name="**/*.jar" />
	</fileset>

	<fileset id="include.lib" dir="${include.lib.dir}" description="run-time dependencies">
		<include name="**/*.jar" />
	</fileset>
	
	<fileset id="war.lib" dir="${war.lib.dir}" description="war dependencies">
		<include name="**/*.jar" />
	</fileset>

	<target name="deploy-integrated-war" depends="build-integrated-war">
		<copy todir="${deploy.path}" file="${stage.dir}/${app.name}.war" />
	</target>

	<target name="deploy-exploded-war" depends="build-exploded-war">
		<copy todir="${deploy.path}/${app.name}">
			<fileset dir="${stage.dir}/${app.name}.war" />
		</copy>
		<delete dir="${stage.dir}/${app.name}.war" quiet="true" />
	</target>

	<target name="undeploy-war">
		<delete dir="${deploy.path}/${app.name}.war" />
		<delete dir="${deploy.path}/${app.name}" />
		<delete>
			<fileset dir="${deploy.path}" includes="${app.name}.war" />
			<fileset dir="${deploy.path}" includes="${app.name}" />
		</delete>
	</target>

	<target name="build-integrated-war" depends="setup-war">
		<war destfile="${stage.dir}/${app.name}.war" basedir="${stage.dir}/war">
			<include name="**/*.*" />
		</war>
		<delete dir="${stage.dir}/war" />
	</target>

	<target name="build-exploded-war" depends="setup-war">
		<mkdir dir="${stage.dir}/${app.name}.war" />
		<copy todir="${stage.dir}/${app.name}.war">
			<fileset dir="${stage.dir}/war">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<delete dir="${stage.dir}/war" />
	</target>

	<target name="setup-war" depends="classes-swf,classes-jar">
		
		<mkdir dir="${stage.dir}/war" />
		<mkdir dir="${stage.dir}/war/META-INF" />
		<mkdir dir="${stage.dir}/war/WEB-INF" />
		<mkdir dir="${stage.dir}/war/WEB-INF/lib" />
		<mkdir dir="${stage.dir}/war/WEB-INF/classes" />
		<mkdir dir="${stage.dir}/war/WEB-INF/config" />

		<copy todir="${stage.dir}/war" includeemptydirs="true">
			<fileset dir="${war.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>

		<copy todir="${stage.dir}/war/WEB-INF/lib">
			<fileset dir="${stage.dir}">
				<include name="${app.name}.jar" />
				<include name="broadleaf-profile.jar" />
				<include name="broadleaf-profile-web.jar" />
				<include name="broadleaf-framework.jar"/>
				<include name="broadleaf-framework-web.jar"/>
				<include name="broadleaf-auxiliary.jar"/>
				<include name="broadleaf-auxiliary-web.jar"/>
				<include name="broadleaf-layout.jar"/>
			</fileset>
		</copy>

		<copy todir="${stage.dir}/war/WEB-INF/lib">
			<fileset dir="${war.lib.dir}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${include.lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</copy>

	</target>

	<target name="classes-swf" depends="setup">
		<mkdir dir="${stage.dir}/classes-swf" />		
		
		<mxmlc file="${src.flex.dir}/${flex.swf.name}.mxml" output="${stage.dir}/classes-swf/${flex.swf.name}.swf" incremental="true"
			services="${war.dir}/WEB-INF/flex/services-config.xml" context-root="/" >
			<load-config filename="${flex.sdk.dir}/frameworks/flex-config.xml"/>
			<source-path path-element="${flex.sdk.dir}/frameworks" />
			<include-libraries file="${compile.lib.swc.dir}/*.swc"/>
		</mxmlc>
	
		<html-wrapper
			swf="${flex.swf.name}"
			title="${flex.app.title}"
			file="${flex.swf.name}.html"
			template="${flex.app.template}"
			height="${flex.app.height}"
			width="${flex.app.width}"
			output="${stage.dir}/classes-swf"
			history="true"
		/>	
		
		<copy todir="${stage.dir}/war" includeemptydirs="true">
			<fileset dir="${stage.dir}/classes-swf" />
		</copy>

		<delete dir="${stage.dir}/classes-swf" />		
	</target>
	
	<target name="classes-jar" depends="setup">
		<mkdir dir="${stage.dir}/classes-jar" />

		<path id="compile-lib">
			<fileset refid="compile.lib" />
			<fileset refid="war.lib" />
			<fileset file="${stage.dir}/*.jar" />
		</path>

		<echo>Compiling with debug=${debug.compile} and JAVA_HOME ${java.home}</echo>
		<javac destdir="${stage.dir}/classes-jar"
			srcdir="${src.java.dir}" classpathref="compile-lib" debug="${debug.compile}"/>

		<copy todir="${stage.dir}/classes-jar">
			<fileset dir="${src.java.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="META-INF/persistence-container.xml"/>
			</fileset>
		</copy>

		<if>
			<equals arg1="${build.env}" arg2="dev" casesensitive="false" />
			<then>
				<copy tofile="${stage.dir}/classes-jar/META-INF/persistence.xml">
					<fileset dir="${src.java.dir}">
						<include name="META-INF/persistence-container.xml" />
					</fileset>
				</copy>
				<replace file="${stage.dir}/classes-jar/META-INF/persistence.xml"
					token="@@DIALECT@@" value="${mysql.db.dialect}"/>
			</then>
			<elseif>
				<equals arg1="${build.env}" arg2="unit-test" casesensitive="false" />
				<then>
					<!-- We have a special file for unit tests -->
					<copy todir="${stage.dir}/classes-jar">
						<fileset dir="${test.src.dir}">
							<include name="META-INF/persistence.xml"/>
						</fileset>
					</copy>

				</then>
			</elseif>
			<else>
				<copy tofile="${stage.dir}/classes-jar/META-INF/persistence.xml">
					<fileset dir="${src.java.dir}">
						<include name="META-INF/persistence-container.xml" />
					</fileset>
				</copy>
				<replace file="${stage.dir}/classes-jar/META-INF/persistence.xml"
					token="@@DIALECT@@" value="${sqlserver.db.dialect}"/>
			</else>
		</if>

		<jar jarfile="${stage.dir}/${app.name}.jar" basedir="${stage.dir}/classes-jar">
			<include name="**/*.class" />
			<include name="**/*.properties" />
			<include name="**/*.xml" />
			<include name="**/*.drl" />
			<include name="**/*.dslr" />
			<include name="**/*.dsl" />
			<include name="META-INF/**" />
			<exclude name="**/test/**/*.class" />
		</jar>
		<delete dir="${stage.dir}/classes-jar" />
	</target>

	<target name="setup" depends="clean">
		<echo>Setting up for environment = ${build.env}</echo>
		<mkdir dir="${stage.dir}" />
		<mkdir dir="${stage.dir}/classes-swf/" />
		<if>
			<equals arg1="${build.env}" arg2="dev" />
			<then>
				<property name="debug.compile" value="true" />
			</then>
			<elseif>
				<equals arg1="${build.env}" arg2="unit-test" />
				<then>
					<property name="debug.compile" value="true" />
				</then>
			</elseif>
			<else>
				<property name="debug.compile" value="false" />
			</else>
		</if>

		<copy todir="${stage.dir}" file="${basedir}/../BroadleafCommerce/build/stage/broadleaf-profile.jar" />
		<copy todir="${stage.dir}" file="${basedir}/../BroadleafCommerce/build/stage/broadleaf-profile-web.jar" />
		<copy todir="${stage.dir}" file="${basedir}/../BroadleafCommerce/build/stage/broadleaf-framework.jar" />
		<copy todir="${stage.dir}" file="${basedir}/../BroadleafCommerce/build/stage/broadleaf-framework-web.jar" />
		<copy todir="${stage.dir}" file="${basedir}/../BroadleafCommerce/build/stage/broadleaf-auxiliary.jar" />
		<copy todir="${stage.dir}" file="${basedir}/../BroadleafCommerce/build/stage/broadleaf-auxiliary-web.jar" />
		<copy todir="${stage.dir}" file="${basedir}/../BroadleafCommerce/build/stage/broadleaf-layout.jar" />
	</target>

	<target name="clean">
		<delete dir="${stage.dir}" />
		<delete dir="${test.output.dir}" />
	</target>

	<target name="generate-javadocs">
		<mkdir dir="${stage.dir}/javadocs" />

		<path id="compile-lib">
			<fileset refid="compile.lib" />
			<fileset file="war.lib" />
		</path>

		<javadoc packagenames="org.broadleafcommerce.*" destdir="${stage.dir}/javadocs" classpathref="compile-lib" useexternalfile="true">
			<fileset dir="${src.java.dir}">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
	</target>

	<target name="app.synch">
		<echo>Synchronizing App</echo>
		<sync todir="${deploy.path}/${app.name}/css" failonerror="false">
			<fileset dir="${war.dir}/css">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${app.name}/js" failonerror="false">
			<fileset dir="${war.dir}/js">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${app.name}/images" failonerror="false">
			<fileset dir="${war.dir}/images">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<copy todir="${deploy.path}/${app.name}" failonerror="false">
			<fileset dir="${war.dir}">
			</fileset>
		</copy>
	</target>

	<target name="load-data">
		<delete>
			<fileset dir="${basedir}/sql/load/mysql/stage">
			    <include name="*.sql"/>
			</fileset>
		</delete>

		
		<copy todir="${basedir}/sql/load/mysql/stage">
		    <fileset dir="${basedir}/sql/load/mysql">
		    	<include name="*.sql"/>
		    </fileset>
		</copy>

		<replace file="${basedir}/sql/load/mysql/stage/load_data.sql" token="@@BASE_DIR@@" value="${basedir}/sql/load/mysql"/>
		<replace file="${basedir}/sql/load/mysql/stage/load_data.sql" token="\" value="\\"/>
		
	     <sql driver="${mysql.db.driver}"
	          url="${mysql.db.url}"
	          userid="${mysql.db.user}"
	          password="${mysql.db.pw}"
	          encoding="UTF-8"
	          classpath="${mysql.db.classpath}">
	     	<transaction src="${basedir}/sql/load/mysql/stage/load_data.sql"/>
	     </sql>
	</target>

	<target name="usage">
		<echo>This is the internal build file for BroadleafCommerceDemo.</echo>
		<echo>Please use build.xml</echo>
	</target>

</project>

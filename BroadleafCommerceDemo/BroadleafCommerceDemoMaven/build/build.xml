<?xml version="1.0" encoding="UTF-8"?>
<project name="Broadleaf Commerce Demo" basedir=".." default="9. Redeploy and Restart Tomcat">
	<property name="internal.build.file" value="${basedir}/build/demo-build.xml" />
	<property file="${basedir}/build/build.properties" />
	<property name="framework.dir" value="${basedir}/../BroadleafCommerce" />
	<property name="lib.dir" value="${framework.dir}/lib" />
	<property name="build.env" value="dev"/>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${basedir}/build/lib/ant-contrib-1.0b3.jar" />
			<pathelement location="${basedir}/build/lib/catalina.jar" />
		</classpath>
	</taskdef>

	<target name="2. Deploy Exploded War" description="Deploys the exploded war." depends="verify-tomcat,verify-mysql">
		<ant antfile="${internal.build.file}" target="deploy-exploded-war" />
	</target>

	<target name="3. Deploy War" description="Deploys the unexploded war." depends="verify-tomcat,verify-mysql">
		<ant antfile="${internal.build.file}" target="deploy-integrated-war" />
	</target>

	<target name="4. Undeploy War" description="Undeploys war file(s)." depends="verify-tomcat">
		<ant antfile="${internal.build.file}" target="undeploy-war" />
	</target>

	<target name="5. Start Tomcat - Debug Mode" depends="verify-tomcat">
	    <java jar="${set.appserver.home}/bin/bootstrap.jar" fork="true">
	        <jvmarg value="-Dcatalina.home=${set.appserver.home}"/>
	        <jvmarg value="-Xdebug"/>
	        <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
	    	<jvmarg value="-Xms128M" />
	    	<jvmarg value="-Xmx512m" />
			<jvmarg value="-Xverify:none" />
			<!--<jvmarg value="-javaagent:${set.appserver.home}/lib/javarebel.jar" />-->
			<!--<jvmarg value="-Drebel.spring_plugin=true" /> -->
			<jvmarg value="-DmyProject.root=${basedir}" />
	    	<jvmarg value="-XX:MaxPermSize=512M" />
	    	<jvmarg value="-Dcom.sun.management.jmxremote=true" />
	    	<jvmarg value="-Dcom.sun.management.jmxremote.port=1616" />
	    	<jvmarg value="-Dcom.sun.management.jmxremote.authenticate=false" />
	    	<jvmarg value="-Dcom.sun.management.jmxremote.ssl=false" />
	    </java>
	</target>

	<target name="6. Stop Tomcat" depends="verify-tomcat">
	    <java jar="${set.appserver.home}/bin/bootstrap.jar" fork="true">
	        <jvmarg value="-Dcatalina.home=${set.appserver.home}"/>
	        <arg value="stop"/>
	    </java>
	</target>

	<target name="7. Generate Java Docs" description="Generates Javadocs for the entire application.">
		<ant antfile="${internal.build.file}" target="generate-javadocs" />
	</target>

	<target name="9. Redeploy and Restart Tomcat">
		<trycatch>
			<try>
				<antcall target="6. Stop Tomcat"/>
			</try>
		</trycatch>
		<sleep seconds="15"/>
		<antcall target="4. Undeploy War"/>
		<antcall target="2. Deploy Exploded War"/>
		<antcall target="5. Start Tomcat - Debug Mode"/>
	</target>

	<target name="10. Load Data" depends="verify-mysql">
		<ant antfile="${internal.build.file}" target="load-data" />
	</target>

	<target name="app.synch" description="Syncs the XHTML, JSP, JS, CSS, and Images of the project with a running application." depends="verify-tomcat">
		<ant antfile="${internal.build.file}" target="app.synch" />
	</target>
	
	<target name="verify-mysql" description="Verify and Prompt for missing mysql properties">
		<if>
			<equals arg1="@@NOT_SET@@" arg2="${mysql.db.user}" />
			<then>
				<echo message="mysql.db.user not yet set in build.properties"/>
				<input message="Please enter your mysql username:" addproperty="set.mysql.db.user" /> 
				<if>
					<equals arg1="" arg2="${set.mysql.db.user}" />
					<then> 
						<fail message="Invalid mysql username given. Cannot be blank." />
					</then>
					<else>
						<var name="mysqldb.user.var" value="mysql.db.user=${set.mysql.db.user}" />
						<property name="mysqldb.user.prop" value="${mysqldb.user.var}" />
						<replace file="${basedir}/build/build.properties" token="mysql.db.user=@@NOT_SET@@" value="${mysqldb.user.prop}"/>
					</else>
				</if>
			</then>
			<else>
				<property name="set.mysql.db.user" value="${mysql.db.user}" />
			</else>
		</if>
		
		<if>
			<equals arg1="@@NOT_SET@@" arg2="${mysql.db.pw}" />
			<then>
				<echo message="mysql.db.pw not yet set in build.properties"/>
				<input message="Please enter your mysql password for account ${set.mysql.db.user}:" addproperty="set.mysql.db.pw" /> 
				<var name="mysqldb.pw.var" value="mysql.db.pw=${set.mysql.db.pw}" />
				<property name="mysqldb.pw.prop" value="${mysqldb.pw.var}" />
				<replace file="${basedir}/build/build.properties" token="mysql.db.pw=@@NOT_SET@@" value="${mysqldb.pw.prop}"/>
			</then>
			<else>
				<property name="set.mysql.db.pw" value="${mysql.db.pw}" />
			</else>
		</if>
		<fail message="Build Failed. Please make sure you have updated mysql.db.user and mysql.db.pw in build.properties">
			<condition>
				<or>
					<equals arg1="@@NOT_SET@@" arg2="${set.mysql.db.user}" />
					<equals arg1="@@NOT_SET@@" arg2="${set.mysql.db.pw}" />
					<equals arg1="" arg2="${set.mysql.db.user}" />
				</or>
	   		</condition>
		</fail>		
	</target>
	
	<target name="verify-tomcat" description="Verify and Prompt for missing tomcat properties">
		<if>
			<equals arg1="@@NOT_SET@@" arg2="${appserver.home}" />
			<then>
				<echo message="appserver.home not yet set in build.properties"/>
				<input message="Please enter your tomcat base directory:" addproperty="req.appserver.home" />
				<if>
					<equals arg1="" arg2="${req.appserver.home}" />
					<then> 
						<fail message="Invalid location given for tomcat directory. Cannot be blank." />
					</then>
					<else>
						<propertyregex property="set.appserver.home" input="${req.appserver.home}" regexp="\\" replace="/" />
						<available file="${set.appserver.home}" type="dir" property="test.appserver.home" />
						<fail unless="test.appserver.home" message="Path does not exist: '${set.appserver.home}'" />						
						<var name="apphome.var" value="appserver.home=${set.appserver.home}" />
						<var name="deploypath.var" value="${set.appserver.home}${deploy.path}" />
						<property name="apphome.prop" value="${apphome.var}" />
						<property name="set.deploy.path" value="${deploypath.var}" />
						<propertyregex property="set.deploy.path" override="true" input="${set.deploy.path}" regexp="/@@NOT_SET@@" replace="" />
						<propertyregex property="set.deploy.path" override="true" input="${set.deploy.path}" regexp="@@NOT_SET@@" replace="" />
						<replace file="${basedir}/build/build.properties" token="appserver.home=@@NOT_SET@@" value="${apphome.prop}"/>
					</else>
				</if>
			</then>
			<else>
				<property name="set.appserver.home" value="${appserver.home}" />
				<property name="set.deploy.path" value="${deploy.path}" />
			</else>
		</if>
		<fail message="Build Failed. Please make sure you have updated appserver.home in build.properties">
			<condition>
				<or>
					<equals arg1="@@NOT_SET@@" arg2="${set.appserver.home}" />
					<equals arg1="" arg2="${set.appserver.home}" />
				</or>
	   		</condition>
		</fail>	
	</target>

	<target name="usage">
		<echo>This is the build file for BroadleafCommerceDemo</echo>
		<echo>Use "Clean" to delete the temporary build directories in the project.</echo>
		<echo>Use "Deploy Exploded War" to deploy the application as an exploded war</echo>
		<echo>Use "Deploy War" to deploy the war unexploded</echo>
		<echo>Use "Start Tomcat - Debug Mode" to start Tomcat in debug mode.
			You will need to configure remote debugging in eclipse (port 8000) to connect.</echo>
		<echo>Use "Stop Tomcat" to shut down the running server</echo>
		<echo>Use "Generate Java Docs" to generate javadocs from source code</echo>
		<echo>Use "app.synch" to synchronize the JSPs, images, CSS,
			and JS files with the server.  This can be configured to happen
			automatically when something is saved in Eclipse.</echo>
		<echo>Use "Load Data" to truncate and load initial data</echo>
	</target>

</project>

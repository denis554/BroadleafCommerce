<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<aop:config>
		<aop:pointcut id="blAdminSecurityServiceSaveOperation" expression="execution(* org.broadleafcommerce.openadmin.server.security.service.AdminSecurityService.save*(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blAdminSecurityServiceSaveOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blAdminSecurityServiceDeleteOperation" expression="execution(* org.broadleafcommerce.openadmin.server.security.service.AdminSecurityService.delete*(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blAdminSecurityServiceDeleteOperation"/>
	</aop:config>

    <aop:config>
        <aop:pointcut id="blAdminSecurityServiceSendOperation" expression="execution(* org.broadleafcommerce.openadmin.server.security.service.AdminSecurityService.send*(..))"/>
        <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blAdminSecurityServiceSendOperation"/>
    </aop:config>

    <aop:config>
        <aop:pointcut id="blAdminSecurityServiceResetOperation" expression="execution(* org.broadleafcommerce.openadmin.server.security.service.AdminSecurityService.reset*(..))"/>
        <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blAdminSecurityServiceResetOperation"/>
    </aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceInspectOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.inspect(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceInspectOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceFetchOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.fetch(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceFetchOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceAddOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.add(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceAddOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceUpdateOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.update(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceUpdateOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceRemoveOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.remove(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceRemoveOperation"/>
	</aop:config>

    <aop:config>
		<aop:pointcut id="blSandBoxServiceRetrieveUserOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.persistence.SandBoxServiceImpl.retrieveUserSandBox(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blSandBoxServiceRetrieveUserOperation"/>
	</aop:config>

    <aop:config>
        <aop:pointcut id="blSandBoxServiceRetrieveApprovalOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.persistence.SandBoxServiceImpl.retrieveApprovalSandBox(..))"/>
        <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blSandBoxServiceRetrieveApprovalOperation"/>
    </aop:config>
	
	<!--<aop:config>
		<aop:pointcut id="blSandBoxServiceSaveOperation" expression="execution(* saveEntitySandBoxItemsandBoxItems(..))"/>
	    <aop:advisor advice-ref="blTxAdviceSandBox" pointcut-ref="blSandBoxServiceSaveOperation"/>
	</aop:config>-->

    <bean id="blPersistenceModules" class="org.springframework.beans.factory.config.ListFactoryBean" scope="prototype">
        <property name="sourceList">
            <list>
                <bean class="org.broadleafcommerce.openadmin.server.service.persistence.module.BasicPersistenceModule"/>
                <bean class="org.broadleafcommerce.openadmin.server.service.persistence.module.JoinStructurePersistenceModule"/>
                <bean class="org.broadleafcommerce.openadmin.server.service.persistence.module.MapStructurePersistenceModule"/>
            </list>
        </property>
    </bean>

    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
	    <property name="converters">
	        <list>
	            <bean class="org.broadleafcommerce.openadmin.server.util.TargetModeTypeConverter" />
	        </list>
	    </property>
	</bean>

    <bean id="blTargetEntityManagers" class="org.springframework.beans.factory.config.MapFactoryBean" scope="prototype">
        <property name="sourceMap">
            <map>
                <entry key="sandbox" value="prodEntityManager"/>
                <entry key="stage" value="prodEntityManager"/>
                <entry key="prod" value="prodEntityManager"/>
            </map>
        </property>
    </bean>

    <bean id="blCustomPersistenceHandlers" class="org.springframework.beans.factory.config.ListFactoryBean" scope="prototype">
        <property name="sourceList">
            <list>
                <bean class="org.broadleafcommerce.openadmin.server.security.handler.AdminRoleCustomPersistenceHandler"/>
                <bean class="org.broadleafcommerce.openadmin.server.security.handler.AdminPermissionCustomPersistenceHandler"/>
            </list>
        </property>
    </bean>

    <bean id="blPersistenceManager" class="org.broadleafcommerce.openadmin.server.service.persistence.PersistenceManagerImpl" scope="prototype">
		<constructor-arg ref="blPersistenceModules"/>
        <property name="customPersistenceHandlers" ref="blCustomPersistenceHandlers"/>
		<property name="targetEntityManagers" ref="blTargetEntityManagers"/>
		<property name="dynamicEntityDao" ref="blDynamicEntityDao"/>
        <property name="adminRemoteSecurityService" ref="blAdminSecurityRemoteService"/>
	</bean>

    <bean id="blDynamicEntityDao" class="org.broadleafcommerce.openadmin.server.dao.DynamicEntityDaoImpl" scope="prototype">
        <property name="ejb3ConfigurationDao" ref="blEJB3ConfigurationDao"/>
        <property name="entityConfiguration" ref="blEntityConfiguration"/>
        <property name="fieldMetadataOverrides" ref="blMetadataOverrides"/>
    </bean>

    <bean id="blSessionFactory" factory-bean="entityManagerFactory" factory-method="getSessionFactory" />

    <bean id="blEJB3ConfigurationDao" class="org.broadleafcommerce.openadmin.server.dao.EJB3ConfigurationDaoImpl">
        <property name="persistenceUnitInfo">
            <bean factory-bean="entityManagerFactory" factory-method="getPersistenceUnitInfo" />
        </property>
    </bean>

	<bean id="prodEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>  
        <property name="entityManagerInterface" value="org.hibernate.ejb.HibernateEntityManager"/>
    </bean>
    
    <bean id="blSendAdminUsernameEmailInfo" class="org.broadleafcommerce.common.email.service.info.EmailInfo">
        <property name="fromAddress" value="noreply@mysite.com"/>
        <property name="emailTemplate" value="org/broadleafcommerce/openadmin/server/email/template/adminSendUsername.vm"/>
        <property name="subject" value="[Broadleaf Admin] Username requested"/>
    </bean>
    
    <bean id="blSendAdminResetPasswordEmail" class="org.broadleafcommerce.common.email.service.info.EmailInfo">
        <property name="fromAddress" value="noreply@mysite.com"/>
        <property name="emailTemplate" value="org/broadleafcommerce/openadmin/server/email/template/adminResetPassword.vm"/>
        <property name="subject" value="[Broadleaf Admin] Reset password requested"/>
    </bean>

    <bean id="blAdminSecurityService" class="org.broadleafcommerce.openadmin.server.security.service.AdminSecurityServiceImpl">
        <property name="sendUsernameEmailInfo" ref="blSendAdminUsernameEmailInfo"/>
        <property name="resetPasswordEmailInfo" ref="blSendAdminResetPasswordEmail"/>
        <property name="tokenExpiredMinutes" value="30"/>
    </bean>
			        
	<!--<bean id="sandBoxEntityManagerPool" class="org.broadleafcommerce.openadmin.server.service.persistence.entitymanager.pool.SandBoxEntityManagerPoolFactoryBean">
        <property name="sandboxPool">
            <bean class="org.broadleafcommerce.openadmin.server.service.persistence.entitymanager.pool.KeyedEntityManagerPool">
                <constructor-arg>
                   <bean class="org.broadleafcommerce.openadmin.server.service.persistence.entitymanager.pool.DefaultEntityManagerPool">
                       <property name="mySharedEntityManagerBeanRef" value="sandBoxEntityManager"/>
                       <property name="maxActive" value="5"/>
                       <property name="minIdle" value="1"/>
                       <property name="timeBetweenEvictionRunsMillis" value="10000"/>
                   </bean>
                </constructor-arg>
                <property name="maxActive" value="1"/>
                <property name="minIdle" value="0"/>
                <property name="minEvictableIdleTimeMillis" value="60000000"/>
                <property name="timeBetweenEvictionRunsMillis" value="10000"/>
                <property name="maxTotal" value="5"/>
            </bean>
        </property>
	</bean>
	
	<bean id="sandBoxEntityManager" class="org.broadleafcommerce.openadmin.server.service.persistence.entitymanager.SandBoxSharedEntityManagerBean" scope="prototype">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="sandBoxEntityManagerFactory">
        	<bean class="org.broadleafcommerce.openadmin.server.service.persistence.entitymanager.ClonedLocalContainerEntityManagerFactoryBean">
				<property name="jpaVendorAdapter">
					<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
				</property>
				<property name="persistenceUnitManager" ref="blPersistenceUnitManager"/>
				<property name="persistenceUnitName" value="blMySandBoxPU"/>
				<property name="clonePersistenceUnitName" value="blPU"/>
				<property name="dataSource">
                    <bean id="sandBoxDataSource" class="org.broadleafcommerce.openadmin.server.service.persistence.datasource.SandBoxDataSource" destroy-method="close" scope="prototype">
                        <property name="maxActive" value="3"/>
                        <property name="minIdle" value="1"/>
                        <property name="timeBetweenEvictionRunsMillis" value="10000"/>
                    </bean>
                </property>
			</bean>
        </property>
        <property name="cleaner" ref="blHibernateCleaner"/>
    </bean>-->
</beans>
<?xml version="1.0" encoding="utf-8"?>
<mx:Tree xmlns:mx="http://www.adobe.com/2006/mxml" 
		labelField="name"
		iconFunction="determineIcon"
		dragEnabled="true"
		dropEnabled="true" 
		dragComplete="handleDragComplete(event)"
		dragDrop="handleDragDrop(event)"
		itemClick="handleItemClick(event)"
		dragStart="handleDragStart(event)"
		>
		<mx:Script>
			<![CDATA[
				import mx.controls.Alert;
				import mx.utils.ObjectUtil;
				import mx.collections.ArrayCollection;
				import org.broadleafcommerce.admin.catalog.control.events.category.CopyCategoryEvent;
				import mx.managers.DragManager;
				import org.broadleafcommerce.admin.catalog.control.events.category.MoveCategoryEvent;
				import org.broadleafcommerce.admin.catalog.model.CategoryTreeItem;
				import org.broadleafcommerce.admin.catalog.control.events.category.EditCategoryEvent;
				import mx.events.ListEvent;
				import mx.events.DragEvent;
				import org.broadleafcommerce.admin.catalog.vo.category.Category; 
				
			[Bindable]
            [Embed("/assets/images/3D-Documents.png")]
            private var categoryHasIcon:Class;

            [Bindable]
            [Embed("/assets/images/Blank.png")]
            private var categoryHasNotIcon:Class;
            
			private function determineIcon(item:Object):Class{
				var iconClass:Class;
					if(item.children.length > 0){
						iconClass = categoryHasIcon;
					}else{
						iconClass = categoryHasNotIcon;
					}
                return iconClass;				
			}			
			
			private function handleDragStart(event:DragEvent):void{
				super.dragStartHandler(event);
				event.draggedItem = selectedItem;
				var e:DragEvent = event;
			}
			
			private function handleDragComplete(event:DragEvent):void{
				super.dragCompleteHandler(event);
			}
			
			private function handleDragDrop(event:DragEvent):void{
				try{						
					var draggedItem:Object = ObjectUtil.copy(this.selectedItem);
					var index:int = this.calculateDropIndex(event);
					var newParent:Object;
					if(this.dataDescriptor.isBranch(this.indexToItemRenderer(index-1).data)){
						newParent = this.indexToItemRenderer(index-1).data;					
					}else{					
						newParent = this.getParentItem(this.indexToItemRenderer(index-1).data);										
					}
					var oldParent:Object = getParentItem(draggedItem);
					super.dragDropHandler(event);
					if(event.action == DragManager.COPY){
						var cce:CopyCategoryEvent = new CopyCategoryEvent(Category(draggedItem.category), Category(newParent.category));
						cce.dispatch();	
					}else{
						var mce:MoveCategoryEvent = new MoveCategoryEvent(Category(draggedItem.category), Category(oldParent.category), Category(newParent.category));
						mce.dispatch();
					}				
			   }catch (error:Error){
					Alert.show("Could not complete drag and drop : "+error.message);
					event.stopImmediatePropagation();
					this.hideDropFeedback(event);
				}
			}

			private function handleItemClick(event:ListEvent):void{
				var selectedItem:Category = Category(this.selectedItem.category); 
				var ecce:EditCategoryEvent = new EditCategoryEvent(selectedItem);
				ecce.dispatch();
			}
			
//		dragDrop="handleDragDrop(event)"
//		dragStart="handleDragStart(event)"
//			private function handleDragStart(event:DragEvent):void{
//				var e:DragEvent = event;
//			} 
//		dataChange="handleDataChange()"
//				import org.broadleafcommerce.admin.catalog.control.events.category.EditCategoryEvent;
//				import org.broadleafcommerce.admin.catalog.vo.category.Category;
//				import mx.events.ListEvent;
//
//				
//				private function handleDataChange():void{
//					trace("DEBUG: handle data change");
//				}
//				
//				private function handleDragDrop(event:DragEvent):void{
//					Tree(event.currentTarget).dr
//					super.dragDropHandler(event);
//				} 		
				
			]]>
		</mx:Script>
	
</mx:Tree>

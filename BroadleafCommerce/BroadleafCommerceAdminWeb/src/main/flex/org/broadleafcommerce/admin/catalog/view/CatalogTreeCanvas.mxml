<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * Copyright 2008-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 -->
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:category="org.broadleafcommerce.admin.view.catalog.category.*"
	width="90%"	
	currentState="none"
	creationComplete="handleCreationComplete()">
	<mx:Script>
		<![CDATA[
			import org.broadleafcommerce.admin.catalog.control.events.category.NewCategoryEvent;
			import org.broadleafcommerce.admin.catalog.control.events.category.EditCategoryEvent;
			import org.broadleafcommerce.admin.catalog.vo.category.Category;
			import org.broadleafcommerce.admin.core.model.AppModelLocator;
			import org.broadleafcommerce.admin.model.view.CategoryModel;
			import mx.events.ListEvent;
		
			[Bindable]
			private var appModel:AppModelLocator = AppModelLocator.getInstance();
		
			private function handleCreationComplete():void{
				this.addEventListener(ListEvent.ITEM_CLICK, handleItemClicked);
			}
		
			private function handleNewCategory(event:Event):void{
				var ncce:NewCategoryEvent = new NewCategoryEvent();
				ncce.dispatch();
//				this.workingAreaHBox.removeAllChildren();
//				this.workingAreaHBox.addChild(new EditCategoryFormCanvas());
			}
			
//			private function handleViewCategories(event:Event):void{
//				this.workingAreaHBox.removeAllChildren();
//				this.workingAreaHBox.addChild(new ViewCategoriesCanvas());
//			}
			
			private function handleItemClicked(event:ListEvent):void{
				var ecce:EditCategoryEvent = new EditCategoryEvent(viewCategoriesCanvas.selectedItem);
				ecce.dispatch();
//				this.workingAreaHBox.removeAllChildren();
//				var ecfc:EditCategoryFormCanvas = new EditCategoryFormCanvas();
//				appModel.currentCategory = Category(appModel.catalogCategories.getItemAt(event.rowIndex));
//				this.workingAreaHBox.addChild(ecfc);
			}
		]]>
	</mx:Script>
	
	<mx:Binding source="appModel.categoryModel.viewState"
					   destination="this.currentState" />
					   
	<mx:HBox 
		width="100%"
		height="100%"
		horizontalGap="20">
		<mx:VBox
			verticalGap="10">
			<mx:LinkButton
				id="newCategoryLinkButton"
				label="New Category"
				click="handleNewCategory(event)"/>
			<category:CategoriesTreeCanvas id="viewCategoriesCanvas"
				categorySelected="handleItemClicked(event)"/>
		</mx:VBox>
		<mx:HBox
			id="workingAreaHBox"
			width="100%"
			height="100%"
			borderStyle="solid"
			cornerRadius="4"
			paddingBottom="10"
			paddingLeft="10"
			paddingRight="10"
			paddingTop="10">
			<category:CategoryEditFormCanvas id="editCategoryCanvas" visible="false" />
		</mx:HBox>		
	</mx:HBox>
	<mx:states>
		<mx:State name="{CategoryModel.STATE_NONE}">
			<mx:SetProperty target="{editCategoryCanvas}" name="visible" value="false" />
		</mx:State>	
		<mx:State name="{CategoryModel.STATE_NEW}">
			<mx:SetProperty target="{editCategoryCanvas}" name="visible" value="true" />
		</mx:State>
		<mx:State name="{CategoryModel.STATE_EDIT}">
			<mx:SetProperty target="{editCategoryCanvas}" name="visible" value="true" />
		</mx:State>
	</mx:states>
</mx:Canvas>

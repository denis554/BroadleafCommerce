<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * Copyright 2008-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 -->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:components="org.broadleafcommerce.admin.catalog.view.category.components.*" xmlns:components1="org.broadleafcommerce.admin.catalog.view.product.components.*">

<mx:Script>
	<![CDATA[
		import org.broadleafcommerce.admin.catalog.control.events.category.SaveCategoryEvent;
		import org.broadleafcommerce.admin.catalog.control.events.category.RemoveFeaturedProductFromCategoryEvent;
		import org.broadleafcommerce.admin.catalog.vo.category.Category;
		import mx.events.DragEvent;
		import org.broadleafcommerce.admin.catalog.control.events.category.AddFeaturedProductToCategoryEvent;
		import org.broadleafcommerce.admin.catalog.model.ProductModel;
		import org.broadleafcommerce.admin.catalog.model.CatalogModelLocator;
		import org.broadleafcommerce.admin.catalog.control.events.product.EditProductEvent;
		import org.broadleafcommerce.admin.catalog.vo.product.Product;
		import org.broadleafcommerce.admin.catalog.model.CatalogModel;
		import org.broadleafcommerce.admin.catalog.vo.product.FeaturedProduct;
		import mx.collections.ArrayCollection;
		import org.broadleafcommerce.admin.core.model.AppModelLocator;
		import org.broadleafcommerce.admin.catalog.model.CategoryModel;

		[Bindable]
		private var categoryModel:CategoryModel = CatalogModelLocator.getInstance().categoryModel;

		[Bindable]
		private var productModel:ProductModel = CatalogModelLocator.getInstance().productModel;

		 private function handleProductsDataGridClick(event:MouseEvent):void{
//		 	var product:Product = Product(ProductsDataGrid(event.currentTarget).selectedItem);
//		 	viewProduct(product, false);
		 }

		public function handleAddButtonClick(event:MouseEvent):void{
			var afptce:AddFeaturedProductToCategoryEvent = new AddFeaturedProductToCategoryEvent(Product(categoryProductsList.selectedItem), categoryModel.currentCategory);
			afptce.dispatch();
		}

		 private function handleViewEditButtonClick(event:MouseEvent):void{
//		 	var product:Product = Product(categoryProductDataGrid.selectedItem);
//		 	viewProduct(product, true);
		 }

		private function handleRemoveButtonClick(event:MouseEvent):void{
			var category:Category = categoryModel.currentCategory;
			var featureddProduct:FeaturedProduct = FeaturedProduct(categoryFeaturedProductDataGrid.selectedItem);
			var rfpfce:RemoveFeaturedProductFromCategoryEvent = new RemoveFeaturedProductFromCategoryEvent(featureddProduct,category);
			rfpfce.dispatch();
		}

		private function handleGridDrop(event:DragEvent):void{
			var product:Product = Product(List(event.dragInitiator).selectedItem);
			var category:Category = categoryModel.currentCategory;
			var index:int = categoryFeaturedProductDataGrid.calculateDropIndex(event);
			
			event.preventDefault();
			
			var afptce:AddFeaturedProductToCategoryEvent = new AddFeaturedProductToCategoryEvent(product, category, index);
			afptce.dispatch();
			
			categoryFeaturedProductDataGrid.hideDropFeedback(event);
		}
		
		private function handleEditItem(event:Event):void{
			var category:Category = categoryModel.currentCategory;
			var sce:SaveCategoryEvent = new SaveCategoryEvent(category);
			sce.dispatch();						
		}

	]]>
</mx:Script>

<mx:Binding source="categoryModel.currentCategory.featuredProducts"
                   destination="categoryFeaturedProductDataGrid.dataProvider" />
                   
<mx:Binding source="productModel.catalogProducts"
            destination="categoryProductsList.dataProvider" />
            
<mx:Binding source="categoryProductsList.selectedItem != null"
            destination="addButton.enabled" />            

<mx:Binding source="categoryFeaturedProductDataGrid.selectedItem != null"
            destination="removeButton.enabled" />            

<!-- mx:Binding source="categoryFeaturedProductDataGrid.selectedItem != null"
            destination="viewEditButton.enabled" /-->            

	<mx:VBox height="100%" width="100%" styleName="padding10">
		<mx:HBox>
			<mx:Button id="addButton" label="Add" styleName="addButton" click="handleAddButtonClick(event)"/>
			<!-- mx:Button id="viewEditButton" label="View/Edit" click="handleViewEditButtonClick(event)" styleName="viewEditButton" / -->
			<mx:Button id="removeButton" label="Remove" styleName="deleteButton" click="handleRemoveButtonClick(event)"/>
		</mx:HBox>
		<mx:HBox width="100%" height="100%">
			<mx:VBox height="100%" width="25%" maxWidth="250" >
				<mx:Label text="Category Products" />			
				<mx:List id="categoryProductsList" width="100%" height="100%" labelField="name" dragEnabled="true"/>			
			</mx:VBox>					
			<components1:FeaturedProductsDataGrid id="categoryFeaturedProductDataGrid" click="handleProductsDataGridClick(event)"
				height="100%" width="75%" itemEditEnd="handleEditItem(event)"
				dropEnabled="true" dragDrop="handleGridDrop(event)"/>
		</mx:HBox>
	</mx:VBox>

</mx:Canvas>

<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="BroadleafCommerce Test Suite">
    <groups>
      <group name="findCurrentCartForCustomerAfterCreation">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.findCurrentCartForCustomerAfterCreation()" name="findCurrentCartForCustomerAfterCreation" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="removeFulFillmentGroupForOrderFirst">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.removeFulFillmentGroupForOrderFirst()" name="removeFulFillmentGroupForOrderFirst" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="readFulfillmentGroupItemsById">
        <method signature="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest.readFulfillmentGroupItemsById()" name="readFulfillmentGroupItemsById" class="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest"/>
      </group>
      <group name="createOrderItem">
        <method signature="org.broadleafcommerce.test.integration.OrderItemDaoTest.createOrderItem(org.broadleafcommerce.order.domain.OrderItem)" name="createOrderItem" class="org.broadleafcommerce.test.integration.OrderItemDaoTest"/>
      </group>
      <group name="findIds">
        <method signature="org.broadleafcommerce.profile.test.IdGenerationTest.findIds()" name="findIds" class="org.broadleafcommerce.profile.test.IdGenerationTest"/>
      </group>
      <group name="createCustomerIdGeneration">
        <method signature="org.broadleafcommerce.profile.test.CustomerTest.createCustomerIdGeneration()" name="createCustomerIdGeneration" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group>
      <group name="paginationObject">
        <method signature="org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testIndices()" name="testIndices" class="org.broadleafcommerce.layout.test.PaginationCommandObjectTest"/>
        <method signature="org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testFullList()" name="testFullList" class="org.broadleafcommerce.layout.test.PaginationCommandObjectTest"/>
        <method signature="org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testDisplayList()" name="testDisplayList" class="org.broadleafcommerce.layout.test.PaginationCommandObjectTest"/>
      </group>
      <group name="readCustomer1">
        <method signature="org.broadleafcommerce.profile.test.CustomerTest.readCustomersByUsername1()" name="readCustomersByUsername1" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group>
      <group name="removeItemFromOrderAfterDefaultFulfillmentGroup">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.removeItemFromOrderAfterFulfillmentGroups()" name="removeItemFromOrderAfterFulfillmentGroups" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="readCustomer2">
        <method signature="org.broadleafcommerce.profile.test.CustomerTest.readCustomersByUsername2()" name="readCustomersByUsername2" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group>
      <group name="createId">
        <method signature="org.broadleafcommerce.profile.test.IdGenerationTest.createId()" name="createId" class="org.broadleafcommerce.profile.test.IdGenerationTest"/>
      </group>
      <group name="createCountry">
        <method signature="org.broadleafcommerce.profile.test.AddressTest.createCountry()" name="createCountry" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group>
      <group name="findCountries">
        <method signature="org.broadleafcommerce.profile.test.AddressTest.findCountries()" name="findCountries" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group>
      <group name="readCustomer">
        <method signature="org.broadleafcommerce.profile.test.CustomerTest.readCustomersById()" name="readCustomersById" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group>
      <group name="testBadAddress">
        <method signature="org.broadleafcommerce.profile.test.USPSAddressStandardizationServiceTest.testBadAddress()" name="testBadAddress" class="org.broadleafcommerce.profile.test.USPSAddressStandardizationServiceTest"/>
      </group>
      <group name="readOrderItemsById">
        <method signature="org.broadleafcommerce.test.integration.OrderItemDaoTest.readOrderItemsById()" name="readOrderItemsById" class="org.broadleafcommerce.test.integration.OrderItemDaoTest"/>
      </group>
      <group name="createProduct">
        <method signature="org.broadleafcommerce.test.integration.ProductDaoTest.testMaintainProduct(org.broadleafcommerce.catalog.domain.Product)" name="testMaintainProduct" class="org.broadleafcommerce.test.integration.ProductDaoTest"/>
      </group>
      <group name="findFulFillmentGroupForOrderFirst">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.findFillmentGroupForOrderFirst()" name="findFillmentGroupForOrderFirst" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="createDefaultFulfillmentGroup">
        <method signature="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.createDefaultFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)" name="createDefaultFulfillmentGroup" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group>
      <group name="findCurrentCartForCustomerBeforeCreation">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.findCurrentCartForCustomerBeforeCreation()" name="findCurrentCartForCustomerBeforeCreation" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="createSkuAvailability">
        <method signature="org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" class="org.broadleafcommerce.inventory.test.SkuAvailabilityTest"/>
      </group>
      <group name="createSku">
        <method signature="org.broadleafcommerce.test.integration.SkuDaoTest.createSku(org.broadleafcommerce.catalog.domain.Sku)" name="createSku" class="org.broadleafcommerce.test.integration.SkuDaoTest"/>
      </group>
      <group name="readFulfillmentGroupItemsForFulfillmentGroup">
        <method signature="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest.readFulfillmentGroupItemsForFulfillmentGroup()" name="readFulfillmentGroupItemsForFulfillmentGroup" class="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest"/>
      </group>
      <group name="readDefaultFulfillmentGroupForId">
        <method signature="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readDefaultFulfillmentGroupForId()" name="readDefaultFulfillmentGroupForId" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group>
      <group name="createOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderDaoTest.createOrder(org.broadleafcommerce.order.domain.Order)" name="createOrder" class="org.broadleafcommerce.test.integration.OrderDaoTest"/>
      </group>
      <group name="createAddress">
        <method signature="org.broadleafcommerce.profile.test.AddressTest.createAddress(org.broadleafcommerce.profile.domain.Address)" name="createAddress" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group>
      <group name="readPhoneById">
        <method signature="org.broadleafcommerce.profile.test.PhoneTest.readPhoneById()" name="readPhoneById" class="org.broadleafcommerce.profile.test.PhoneTest"/>
      </group>
      <group name="findStateProvinceByShortName">
        <method signature="org.broadleafcommerce.profile.test.AddressTest.findStateProvinceByShortName()" name="findStateProvinceByShortName" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group>
      <group name="readPhone">
        <method signature="org.broadleafcommerce.profile.test.PhoneTest.readPhoneByUserId()" name="readPhoneByUserId" class="org.broadleafcommerce.profile.test.PhoneTest"/>
      </group>
      <group name="addFulfillmentGroupToOrderFirst">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.addFulfillmentGroupToOrderFirst(org.broadleafcommerce.order.domain.FulfillmentGroup)" name="addFulfillmentGroupToOrderFirst" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="readPaymentInfoById">
        <method signature="org.broadleafcommerce.test.integration.PaymentInfoDaoTest.readPaymentInfoById()" name="readPaymentInfoById" class="org.broadleafcommerce.test.integration.PaymentInfoDaoTest"/>
      </group>
      <group name="readFirstSku">
        <method signature="org.broadleafcommerce.test.integration.SkuDaoTest.readFirstSku()" name="readFirstSku" class="org.broadleafcommerce.test.integration.SkuDaoTest"/>
      </group>
      <group name="createFulfillmentGroupItem">
        <method signature="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest.createFulfillmentGroupItem()" name="createFulfillmentGroupItem" class="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest"/>
      </group>
      <group name="findCountryByShortName">
        <method signature="org.broadleafcommerce.profile.test.AddressTest.findCountryByShortName()" name="findCountryByShortName" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group>
      <group name="changeCustomerPassword">
        <method signature="org.broadleafcommerce.profile.test.CustomerTest.changeCustomerPasswords()" name="changeCustomerPasswords" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group>
      <group name="createPhone">
        <method signature="org.broadleafcommerce.profile.test.PhoneTest.createPhone(org.broadleafcommerce.profile.domain.Phone)" name="createPhone" class="org.broadleafcommerce.profile.test.PhoneTest"/>
      </group>
      <group name="getOrdersForCustomer">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.getOrdersForCustomer()" name="getOrdersForCustomer" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="removeDefaultFulFillmentGroupForOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.removeDefaultFulFillmentGroupForOrder()" name="removeDefaultFulFillmentGroupForOrder" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="readSkuById">
        <method signature="org.broadleafcommerce.test.integration.SkuDaoTest.readSkuById()" name="readSkuById" class="org.broadleafcommerce.test.integration.SkuDaoTest"/>
      </group>
      <group name="readOrderItemsForOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderItemDaoTest.readOrderItemsForOrder()" name="readOrderItemsForOrder" class="org.broadleafcommerce.test.integration.OrderItemDaoTest"/>
      </group>
      <group name="readOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderDaoTest.readOrderById()" name="readOrderById" class="org.broadleafcommerce.test.integration.OrderDaoTest"/>
      </group>
      <group name="createPaymentInfo">
        <method signature="org.broadleafcommerce.test.integration.PaymentInfoDaoTest.createPaymentInfo(org.broadleafcommerce.order.domain.PaymentInfo)" name="createPaymentInfo" class="org.broadleafcommerce.test.integration.PaymentInfoDaoTest"/>
      </group>
      <group name="addPaymentToOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.addPaymentToOrder(org.broadleafcommerce.order.domain.PaymentInfo)" name="addPaymentToOrder" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="findDefaultFulFillmentGroupForOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.findDefaultFillmentGroupForOrder()" name="findDefaultFillmentGroupForOrder" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="getItemsForOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.getItemsForOrder()" name="getItemsForOrder" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="readPaymentInfosByOrder">
        <method signature="org.broadleafcommerce.test.integration.PaymentInfoDaoTest.readPaymentInfoByOrder()" name="readPaymentInfoByOrder" class="org.broadleafcommerce.test.integration.PaymentInfoDaoTest"/>
      </group>
      <group name="readAddress">
        <method signature="org.broadleafcommerce.profile.test.AddressTest.readAddressByUserId()" name="readAddressByUserId" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group>
      <group name="deleteOrderForCustomer">
        <method signature="org.broadleafcommerce.test.integration.OrderDaoTest.deleteOrderForCustomer()" name="deleteOrderForCustomer" class="org.broadleafcommerce.test.integration.OrderDaoTest"/>
      </group>
      <group name="updateItemsInOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.updateItemsInOrder()" name="updateItemsInOrder" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="readFulfillmentGroupsForOrder">
        <method signature="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readFulfillmentGroupsForOrder()" name="readFulfillmentGroupsForOrder" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group>
      <group name="createFulfillmentGroup">
        <method signature="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.createFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)" name="createFulfillmentGroup" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group>
      <group name="readFulfillmentGroupsForId">
        <method signature="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readFulfillmentGroupsForId()" name="readFulfillmentGroupsForId" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group>
      <group name="createStateProvince">
        <method signature="org.broadleafcommerce.profile.test.AddressTest.createStateProvince()" name="createStateProvince" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group>
      <group name="findStateProvinces">
        <method signature="org.broadleafcommerce.profile.test.AddressTest.findStateProvinces()" name="findStateProvinces" class="org.broadleafcommerce.profile.test.AddressTest"/>
      </group>
      <group name="testSuccessfulAddress">
        <method signature="org.broadleafcommerce.profile.test.USPSAddressStandardizationServiceTest.testSuccessfulAddress()" name="testSuccessfulAddress" class="org.broadleafcommerce.profile.test.USPSAddressStandardizationServiceTest"/>
      </group>
      <group name="createCustomers">
        <method signature="org.broadleafcommerce.profile.test.CustomerTest.createCustomer(org.broadleafcommerce.profile.domain.Customer)" name="createCustomer" class="org.broadleafcommerce.profile.test.CustomerTest"/>
      </group>
      <group name="readOrdersForCustomer">
        <method signature="org.broadleafcommerce.test.integration.OrderDaoTest.readOrdersForCustomer()" name="readOrdersForCustomer" class="org.broadleafcommerce.test.integration.OrderDaoTest"/>
      </group>
      <group name="removeItemFromOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.removeItemFromOrder()" name="removeItemFromOrder" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
      <group name="readDefaultFulfillmentGroupForOrder">
        <method signature="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readDefaultFulfillmentGroupForOrder()" name="readDefaultFulfillmentGroupForOrder" class="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest"/>
      </group>
      <group name="addItemToOrder">
        <method signature="org.broadleafcommerce.test.integration.OrderServiceTest.addItemToOrder()" name="addItemToOrder" class="org.broadleafcommerce.test.integration.OrderServiceTest"/>
      </group>
    </groups>
    <test name="broadleafcommerce-layout">
      <class name="org.broadleafcommerce.layout.test.PaginationCommandObjectTest">
        <test-method status="PASS" signature="testFullList()" name="testFullList" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="testDisplayList()" name="testDisplayList" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testIndices()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testFullList()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="31" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testFullList()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testIndices()" name="testIndices" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testDisplayList()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testIndices()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.layout.test.PaginationCommandObjectTest.testDisplayList()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
    </test>
    <test name="broadleafcommerce-unittest">
    </test>
    <test name="commerce-integrationtest">
      <class name="org.broadleafcommerce.profile.test.CustomerTest">
        <test-method status="PASS" signature="readCustomersByUsername2()" name="readCustomersByUsername2" duration-ms="0" depends-on-groups="changeCustomerPassword" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.readCustomersByUsername1()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomer(org.broadleafcommerce.profile.domain.Customer)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomer(org.broadleafcommerce.profile.domain.Customer)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.readCustomersByUsername2()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="changeCustomerPasswords()" name="changeCustomerPasswords" duration-ms="0" depends-on-groups="readCustomer1" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="15" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomer(org.broadleafcommerce.profile.domain.Customer)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.readCustomersById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readCustomersByUsername1()" name="readCustomersByUsername1" duration-ms="0" depends-on-groups="createCustomers" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="createCustomer(org.broadleafcommerce.profile.domain.Customer)" name="createCustomer" duration-ms="0" depends-on-groups="createCustomerIdGeneration" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.domain.CustomerImpl@61bbb7]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.readCustomersByUsername1()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomerIdGeneration()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.readCustomersByUsername2()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readCustomersById()" name="readCustomersById" duration-ms="0" depends-on-groups="createCustomers" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.changeCustomerPasswords()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createCustomer(org.broadleafcommerce.profile.domain.Customer)" name="createCustomer" duration-ms="16" depends-on-groups="createCustomerIdGeneration" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.domain.CustomerImpl@1800b16]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.readCustomersById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomerIdGeneration()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createCustomerIdGeneration()" name="createCustomerIdGeneration" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.createCustomer(org.broadleafcommerce.profile.domain.Customer)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.CustomerTest.changeCustomerPasswords()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.OrmTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="testMappings()" name="testMappings" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrmTest.testMappings()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrmTest.testMappings()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readDefaultFulfillmentGroupForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readDefaultFulfillmentGroupForId()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readFulfillmentGroupsForId()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.createDefaultFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.createFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readFulfillmentGroupsForId()" name="readFulfillmentGroupsForId" duration-ms="0" depends-on-groups="createFulfillmentGroup" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="readDefaultFulfillmentGroupForId()" name="readDefaultFulfillmentGroupForId" duration-ms="0" depends-on-groups="createDefaultFulfillmentGroup" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readFulfillmentGroupsForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readDefaultFulfillmentGroupForOrder()" name="readDefaultFulfillmentGroupForOrder" duration-ms="0" depends-on-groups="createDefaultFulfillmentGroup" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="15" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readDefaultFulfillmentGroupForId()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readDefaultFulfillmentGroupForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readFulfillmentGroupsForId()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readFulfillmentGroupsForOrder()" name="readFulfillmentGroupsForOrder" duration-ms="0" depends-on-groups="createFulfillmentGroup" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.createDefaultFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)" name="createFulfillmentGroup" duration-ms="0" depends-on-groups="createAddress, createOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.order.domain.FulfillmentGroupImpl@872be7]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.readFulfillmentGroupsForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupDaoTest.createFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createDefaultFulfillmentGroup(org.broadleafcommerce.order.domain.FulfillmentGroup)" name="createDefaultFulfillmentGroup" duration-ms="16" depends-on-groups="createAddress, createOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.order.domain.FulfillmentGroupImpl@1a92be6]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.profile.test.PhoneTest">
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.PhoneTest.createPhone(org.broadleafcommerce.profile.domain.Phone)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.PhoneTest.readPhoneById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readPhoneById()" name="readPhoneById" duration-ms="0" depends-on-groups="createPhone" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.PhoneTest.readPhoneById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.PhoneTest.readPhoneByUserId()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createPhone(org.broadleafcommerce.profile.domain.Phone)" name="createPhone" duration-ms="0" depends-on-groups="readCustomer1" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.domain.PhoneImpl@10abcb4]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.PhoneTest.readPhoneByUserId()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readPhoneByUserId()" name="readPhoneByUserId" duration-ms="0" depends-on-groups="createPhone" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="31" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.PhoneTest.createPhone(org.broadleafcommerce.profile.domain.Phone)]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.OrderDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderDaoTest.deleteOrderForCustomer()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderDaoTest.readOrderById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createOrder(org.broadleafcommerce.order.domain.Order)" name="createOrder" duration-ms="0" depends-on-groups="readCustomer1, createPhone" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.order.domain.OrderImpl@1ea34ed]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="deleteOrderForCustomer()" name="deleteOrderForCustomer" duration-ms="0" depends-on-groups="createOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderDaoTest.deleteOrderForCustomer()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readOrdersForCustomer()" name="readOrdersForCustomer" duration-ms="16" depends-on-groups="readCustomer1, createOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderDaoTest.readOrdersForCustomer()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderDaoTest.createOrder(org.broadleafcommerce.order.domain.Order)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderDaoTest.readOrdersForCustomer()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readOrderById()" name="readOrderById" duration-ms="0" depends-on-groups="createOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderDaoTest.readOrderById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderDaoTest.createOrder(org.broadleafcommerce.order.domain.Order)]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.inventory.test.SkuAvailabilityTest">
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@1ccc22d]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.readSKUAvailabilityEntries()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@1907b9e]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readAvailableSkusForLocation()" name="readAvailableSkusForLocation" duration-ms="0" depends-on-groups="createSkuAvailability" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.readSKUAvailabilityEntries()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.checkAvailableQuantityWithNullReserveQty()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="checkAvailableQuantityWithNullQuantityOnHand()" name="checkAvailableQuantityWithNullQuantityOnHand" duration-ms="0" depends-on-groups="createSkuAvailability" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.readAvailableSkusForUnknownLocation()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@9ab21d]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="checkAvailableQuantityWithNullReserveQty()" name="checkAvailableQuantityWithNullReserveQty" duration-ms="0" depends-on-groups="createSkuAvailability" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@148f4ec]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@88a346]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@a79fbb]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.checkAvailableQuantityWithNullQuantityOnHand()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.readAvailableSkusForLocation()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.readAvailableSkusForUnknownLocation()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.checkAvailableQuantityWithReserveAndQOH()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@18c43ad]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@19b2f32]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readAvailableSkusForUnknownLocation()" name="readAvailableSkusForUnknownLocation" duration-ms="16" depends-on-groups="createSkuAvailability" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.checkAvailableQuantityWithReserveAndQOH()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.checkAvailableQuantityWithNullReserveQty()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="readSKUAvailabilityEntries()" name="readSKUAvailabilityEntries" duration-ms="16" depends-on-groups="createSkuAvailability" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="checkAvailableQuantityWithReserveAndQOH()" name="checkAvailableQuantityWithReserveAndQOH" duration-ms="0" depends-on-groups="createSkuAvailability" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.readAvailableSkusForLocation()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@1076445]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.checkAvailableQuantityWithNullQuantityOnHand()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.inventory.test.SkuAvailabilityTest.createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createSkuAvailability(org.broadleafcommerce.inventory.domain.SkuAvailability)" name="createSkuAvailability" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.inventory.domain.SkuAvailabilityImpl@146f61d]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.SkuDaoTest">
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.SkuDaoTest.readFirstSku()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.SkuDaoTest.createSku(org.broadleafcommerce.catalog.domain.Sku)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createSku(org.broadleafcommerce.catalog.domain.Sku)" name="createSku" duration-ms="0" depends-on-groups="readCustomer1, createProduct, createOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.SkuImpl@3c205c]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readFirstSku()" name="readFirstSku" duration-ms="15" depends-on-groups="createSku" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.SkuDaoTest.readSkuById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.SkuDaoTest.readSkuById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.SkuDaoTest.readFirstSku()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readSkuById()" name="readSkuById" duration-ms="0" depends-on-groups="createSku" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.SkuDaoTest.createSku(org.broadleafcommerce.catalog.domain.Sku)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest">
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest.readFulfillmentGroupItemsById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createFulfillmentGroupItem()" name="createFulfillmentGroupItem" duration-ms="0" depends-on-groups="createOrderItem, createDefaultFulfillmentGroup, createOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest.createFulfillmentGroupItem()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest.readFulfillmentGroupItemsForFulfillmentGroup()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readFulfillmentGroupItemsById()" name="readFulfillmentGroupItemsById" duration-ms="0" depends-on-groups="createFulfillmentGroupItem" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest.readFulfillmentGroupItemsById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="readFulfillmentGroupItemsForFulfillmentGroup()" name="readFulfillmentGroupItemsForFulfillmentGroup" duration-ms="0" depends-on-groups="createFulfillmentGroupItem" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest.readFulfillmentGroupItemsForFulfillmentGroup()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.FulfillmentGroupItemDaoTest.createFulfillmentGroupItem()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.profile.test.USPSAddressStandardizationServiceTest">
        <test-method status="PASS" signature="testSuccessfulAddress()" name="testSuccessfulAddress" duration-ms="140" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="testBadAddress()" name="testBadAddress" duration-ms="109" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.USPSAddressStandardizationServiceTest.testSuccessfulAddress()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.USPSAddressStandardizationServiceTest.testBadAddress()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.USPSAddressStandardizationServiceTest.testSuccessfulAddress()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.USPSAddressStandardizationServiceTest.testBadAddress()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.PaymentInfoDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.PaymentInfoDaoTest.createPaymentInfo(org.broadleafcommerce.order.domain.PaymentInfo)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="15" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.PaymentInfoDaoTest.readPaymentInfoById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.PaymentInfoDaoTest.readPaymentInfoById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.PaymentInfoDaoTest.createPaymentInfo(org.broadleafcommerce.order.domain.PaymentInfo)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="15" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="readPaymentInfoById()" name="readPaymentInfoById" duration-ms="0" depends-on-groups="createPaymentInfo" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="readPaymentInfoByOrder()" name="readPaymentInfoByOrder" duration-ms="0" depends-on-groups="createPaymentInfo" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.PaymentInfoDaoTest.readPaymentInfoByOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createPaymentInfo(org.broadleafcommerce.order.domain.PaymentInfo)" name="createPaymentInfo" duration-ms="0" depends-on-groups="readAddress, readCustomer1, createOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.order.domain.PaymentInfoImpl@3e7f0a]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.PaymentInfoDaoTest.readPaymentInfoByOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.email.test.EmailTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="testSynchronousEmail()" name="testSynchronousEmail" duration-ms="187" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.email.test.EmailTest.testSynchronousEmail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.email.test.EmailTest.testSynchronousEmail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.profile.test.IdGenerationTest">
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.IdGenerationTest.findIds()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.IdGenerationTest.createId()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.IdGenerationTest.findIds()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="15" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="findIds()" name="findIds" duration-ms="15" depends-on-groups="createId" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="createId()" name="createId" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.IdGenerationTest.createId()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.profile.test.AddressTest">
        <test-method status="PASS" signature="findCountryByShortName()" name="findCountryByShortName" duration-ms="0" depends-on-groups="findCountries" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createCountry()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.findStateProvinces()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.readAddressByUserId()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="31" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createStateProvince()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="findCountries()" name="findCountries" duration-ms="16" depends-on-groups="createCountry" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.findStateProvinceByShortName()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.findStateProvinces()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readAddressByUserId()" name="readAddressByUserId" duration-ms="0" depends-on-groups="createAddress" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.findCountries()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="findStateProvinces()" name="findStateProvinces" duration-ms="47" depends-on-groups="createStateProvince" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6281" started-at="2009-04-02T17:47:57Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.findCountries()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="78" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createStateProvince()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createAddress(org.broadleafcommerce.profile.domain.Address)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.findStateProvinceByShortName()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="findStateProvinceByShortName()" name="findStateProvinceByShortName" duration-ms="0" depends-on-groups="findStateProvinces" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createAddress(org.broadleafcommerce.profile.domain.Address)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createAddress(org.broadleafcommerce.profile.domain.Address)" name="createAddress" duration-ms="0" depends-on-groups="readCustomer1" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.domain.AddressImpl@3b889b]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.readAddressByUserId()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createCountry()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createCountry()" name="createCountry" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createAddress(org.broadleafcommerce.profile.domain.Address)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.findCountryByShortName()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.createAddress(org.broadleafcommerce.profile.domain.Address)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.profile.test.AddressTest.findCountryByShortName()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createAddress(org.broadleafcommerce.profile.domain.Address)" name="createAddress" duration-ms="15" depends-on-groups="readCustomer1" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.profile.domain.AddressImpl@4d28c9]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createStateProvince()" name="createStateProvince" duration-ms="16" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.OrderServiceTest">
        <test-method status="PASS" signature="findCurrentCartForCustomerAfterCreation()" name="findCurrentCartForCustomerAfterCreation" duration-ms="0" depends-on-groups="findCurrentCartForCustomerBeforeCreation" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.getItemsForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.getItemsForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="findCurrentCartForCustomerBeforeCreation()" name="findCurrentCartForCustomerBeforeCreation" duration-ms="0" depends-on-groups="readCustomer1, createPhone" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.addItemToOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.addPaymentToOrder(org.broadleafcommerce.order.domain.PaymentInfo)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="15" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.findCurrentCartForCustomerBeforeCreation()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.findDefaultFillmentGroupForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="updateItemsInOrder()" name="updateItemsInOrder" duration-ms="0" depends-on-groups="getItemsForOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.updateItemsInOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.removeFulFillmentGroupForOrderFirst()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.addFulfillmentGroupToOrderFirst(org.broadleafcommerce.order.domain.FulfillmentGroup)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="removeDefaultFulFillmentGroupForOrder()" name="removeDefaultFulFillmentGroupForOrder" duration-ms="0" depends-on-groups="findCurrentCartForCustomerAfterCreation, addFulfillmentGroupToOrderFirst" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.addFulfillmentGroupToOrderFirst(org.broadleafcommerce.order.domain.FulfillmentGroup)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.getOrdersForCustomer()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.updateItemsInOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.removeItemFromOrderAfterFulfillmentGroups()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getItemsForOrder()" name="getItemsForOrder" duration-ms="15" depends-on-groups="addItemToOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="removeItemFromOrder()" name="removeItemFromOrder" duration-ms="0" depends-on-groups="getItemsForOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.removeItemFromOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="removeItemFromOrderAfterFulfillmentGroups()" name="removeItemFromOrderAfterFulfillmentGroups" duration-ms="31" depends-on-groups="addFulfillmentGroupToOrderFirst" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.findCurrentCartForCustomerBeforeCreation()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.findCurrentCartForCustomerAfterCreation()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.findFillmentGroupForOrderFirst()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.addItemToOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.getOrdersForCustomer()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="addPaymentToOrder(org.broadleafcommerce.order.domain.PaymentInfo)" name="addPaymentToOrder" duration-ms="0" depends-on-groups="createPaymentInfo, findCurrentCartForCustomerAfterCreation, readCustomer1" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.order.domain.PaymentInfoImpl@113e8c7]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.removeDefaultFulFillmentGroupForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="getOrdersForCustomer()" name="getOrdersForCustomer" duration-ms="16" depends-on-groups="findCurrentCartForCustomerAfterCreation, readCustomer1" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="addItemToOrder()" name="addItemToOrder" duration-ms="0" depends-on-groups="findCurrentCartForCustomerAfterCreation, createSku" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="findDefaultFillmentGroupForOrder()" name="findDefaultFillmentGroupForOrder" duration-ms="0" depends-on-groups="findCurrentCartForCustomerAfterCreation, addFulfillmentGroupToOrderFirst" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="removeFulFillmentGroupForOrderFirst()" name="removeFulFillmentGroupForOrderFirst" duration-ms="0" depends-on-groups="findCurrentCartForCustomerAfterCreation, addFulfillmentGroupToOrderFirst" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.removeItemFromOrderAfterFulfillmentGroups()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.addPaymentToOrder(org.broadleafcommerce.order.domain.PaymentInfo)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.findCurrentCartForCustomerAfterCreation()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.removeItemFromOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="findFillmentGroupForOrderFirst()" name="findFillmentGroupForOrderFirst" duration-ms="0" depends-on-groups="findCurrentCartForCustomerAfterCreation, addFulfillmentGroupToOrderFirst" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="addFulfillmentGroupToOrderFirst(org.broadleafcommerce.order.domain.FulfillmentGroup)" name="addFulfillmentGroupToOrderFirst" duration-ms="16" depends-on-groups="findCurrentCartForCustomerAfterCreation, createAddress, addItemToOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.order.domain.FulfillmentGroupImpl@1c9024e]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.findFillmentGroupForOrderFirst()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="15" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.findDefaultFillmentGroupForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.removeFulFillmentGroupForOrderFirst()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderServiceTest.removeDefaultFulFillmentGroupForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.OrderItemDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderItemDaoTest.readOrderItemsForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readOrderItemsById()" name="readOrderItemsById" duration-ms="0" depends-on-groups="createOrderItem" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderItemDaoTest.readOrderItemsById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderItemDaoTest.createOrderItem(org.broadleafcommerce.order.domain.OrderItem)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderItemDaoTest.readOrderItemsById()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="readOrderItemsForOrder()" name="readOrderItemsForOrder" duration-ms="0" depends-on-groups="createOrderItem" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderItemDaoTest.readOrderItemsForOrder()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.OrderItemDaoTest.createOrderItem(org.broadleafcommerce.order.domain.OrderItem)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="createOrderItem(org.broadleafcommerce.order.domain.OrderItem)" name="createOrderItem" duration-ms="0" depends-on-groups="createSku, createOrder" started-at="2009-04-02T17:48:04Z" finished-at="2009-04-02T17:48:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.order.domain.OrderItemImpl@671637]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.ProductDaoTest">
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testMaintainProduct(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testReadProductsById(org.broadleafcommerce.catalog.domain.Product)" name="testReadProductsById" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@1c7464a]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testReadProductsById(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testMaintainProduct(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testMaintainProduct(org.broadleafcommerce.catalog.domain.Product)" name="testMaintainProduct" duration-ms="15" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@106ee1f]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testReadProductsByName(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testReadProductsByName(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:03Z" finished-at="2009-04-02T17:48:03Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ProductDaoTest.testReadProductsById(org.broadleafcommerce.catalog.domain.Product)]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testReadProductsByName(org.broadleafcommerce.catalog.domain.Product)" name="testReadProductsByName" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.broadleafcommerce.catalog.domain.ProductImpl@9993a1]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="org.broadleafcommerce.test.integration.ExtensibilityTest">
        <test-method status="PASS" signature="test()" name="test" duration-ms="125" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ExtensibilityTest.test()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)" name="springTestContextAfterTestMethod" is-config="true" duration-ms="16" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.broadleafcommerce.test.integration.ExtensibilityTest.test()]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="31" started-at="2009-04-02T17:48:05Z" finished-at="2009-04-02T17:48:05Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>

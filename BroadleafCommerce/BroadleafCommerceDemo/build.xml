<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.6.2 or above.        -->
<!-- ====================================================================== -->

<project name="BroadleafCommerceDemo" default="war" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	
	<path id="maven-ant-tasks.classpath" path="lib/maven-ant-tasks-2.0.10.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
	
	<artifact:pom id="mypom" file="pom.xml"/>
	<artifact:dependencies filesetId="mydeps" pomRefId="mypom" useScope="runtime"/>
	<path id="build.runtime.classpath">
		<fileset refid="mydeps"/>
	</path>
	
	<property name="maven.build.finalName" value="${mypom.artifactId}-${mypom.version}"/>
	<property name="maven.build.dir" value="target"/>
	<property name="maven.build.outputDir" value="${maven.build.dir}/classes"/>
	<property name="app.name" value="broadleafdemo"/>
	
	<property file="build.properties" />
	
	<target name="app.synch">
		<echo>Synchronizing App</echo>
		<sync todir="${deploy.path}/${app.name}/css">
			<fileset dir="src/main/webapp/css">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${app.name}/js">
			<fileset dir="src/main/webapp/js">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${app.name}/images">
			<fileset dir="src/main/webapp/images">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${app.name}/WEB-INF/jsp">
			<fileset dir="src/main/webapp/WEB-INF/jsp">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${app.name}/WEB-INF/tags">
			<fileset dir="src/main/webapp/WEB-INF/tags">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<copy todir="${deploy.path}/${app.name}">
			<fileset dir="src/main/webapp">
				<include name="*.jsp"/>
			</fileset>
		</copy>
	</target>
	
	<target name="clean">
		<delete dir="${maven.build.dir}"/>
	</target>

	<target name="load-data">
		<delete>
			<fileset dir="config/mysql/stage">
			    <include name="*.sql"/>
			</fileset>
		</delete>
		
		<copy todir="config/mysql/stage">
		    <fileset dir="config/mysql">
		    	<include name="*.sql"/>
		    </fileset>
		</copy>
		
		<property name="baseLocation" location="config/mysql"/>

		<replace file="config/mysql/stage/load_data.sql" token="@@BASE_DIR@@" value="${baseLocation}"/>
		<replace file="config/mysql/stage/load_data.sql" token="\" value="\\"/>
		
	     <sql driver="${mysql.db.driver}"
	          url="${mysql.db.url}"
	          userid="${mysql.db.user}"
	          password="${mysql.db.pw}"
	          encoding="UTF-8"
	     	  classpathref="build.runtime.classpath">
	     	<transaction src="config/mysql/stage/load_data.sql"/>
	     </sql>
	</target>
	
	<target name="package">
	    <mkdir dir="${maven.build.dir}/${maven.build.finalName}/WEB-INF/lib"/>
		<copy todir="${maven.build.dir}/${maven.build.finalName}/WEB-INF/lib" flatten="true">
			<path refid="build.runtime.classpath"/>	
		</copy>
	    <war destfile="${maven.build.dir}/${maven.build.finalName}.war" 
	         compress="true" 
	         webxml="src/main/webapp/WEB-INF/web.xml">
	      <lib dir="${maven.build.dir}/${maven.build.finalName}/WEB-INF/lib"/>
	      <classes dir="${maven.build.outputDir}"/>
	      <fileset dir="src/main/webapp" 
	               excludes="WEB-INF/web.xml"/>
		  <fileset dir="${maven.build.dir}/${maven.build.finalName}">
		  	<include name="WEB-INF/*.xml"/>
		  </fileset>
	    </war>
	</target>
	
	<target name="war">
		<copy todir="${maven.build.dir}/${maven.build.finalName}/WEB-INF">
			<fileset dir="config/spring">
				<include name="*.xml"/>
			</fileset>
		</copy>
		<replace file="${maven.build.dir}/${maven.build.finalName}/WEB-INF/applicationContext-custom.xml" token="@@MYSQL_USERNAME@@" value="${mysql.db.user}"/>
		<replace file="${maven.build.dir}/${maven.build.finalName}/WEB-INF/applicationContext-custom.xml" token="@@MYSQL_PASSWORD@@" value="${mysql.db.pw}"/>
		<replace file="${maven.build.dir}/${maven.build.finalName}/WEB-INF/applicationContext-custom.xml" token="@@MYSQL_URL@@" value="${mysql.db.url}"/>
		<antcall inheritall="true" target="package"/>
	</target>
	
	<target name="deploy-integrated-war" depends="war">
		<copy tofile="${deploy.path}/${app.name}.war" file="${maven.build.dir}/${maven.build.finalName}.war" />
	</target>

	<target name="deploy-exploded-war" depends="war">
		<mkdir dir="${deploy.path}/${app.name}"/>
		<copy todir="${deploy.path}/${app.name}">
			<fileset dir="${maven.build.dir}/${maven.build.finalName}" />
			<fileset dir="src/main/webapp" />
		</copy>
		<copy todir="${deploy.path}/${app.name}/WEB-INF/classes">
			<fileset dir="${maven.build.outputDir}" />
		</copy>
		<copy todir="${deploy.path}/${app.name}/WEB-INF">
			<fileset dir="${maven.build.dir}/${maven.build.finalName}/WEB-INF">
			  	<include name="*.xml"/>
			  </fileset>
		</copy>
	</target>
	
	<target name="undeploy">
		<delete dir="${deploy.path}/${app.name}"/>
		<delete file="${deploy.path}/${app.name}.war"/>
	</target>
	
	<target name="start-tomcat-debug">
	    <java jar="${appserver.home}/bin/bootstrap.jar" fork="true">
	        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
	        <jvmarg value="-Xdebug"/>
	        <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
	    	<jvmarg value="-Xms128M" />
	    	<jvmarg value="-Xmx512m" />
			<jvmarg value="-Xverify:none" />
			<!--<jvmarg value="-javaagent:${set.appserver.home}/lib/javarebel.jar" />-->
			<!--<jvmarg value="-Drebel.spring_plugin=true" /> -->
			<jvmarg value="-DmyProject.root=${basedir}" />
	    	<jvmarg value="-XX:MaxPermSize=512M" />
	    	<jvmarg value="-Dcom.sun.management.jmxremote=true" />
	    	<jvmarg value="-Dcom.sun.management.jmxremote.port=1616" />
	    	<jvmarg value="-Dcom.sun.management.jmxremote.authenticate=false" />
	    	<jvmarg value="-Dcom.sun.management.jmxremote.ssl=false" />
	    </java>
	</target>

	<target name="stop-tomcat">
	    <java jar="${appserver.home}/bin/bootstrap.jar" fork="true">
	        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
	        <arg value="stop"/>
	    </java>
	</target>
</project>
